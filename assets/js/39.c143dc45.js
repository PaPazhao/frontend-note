(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{453:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("垃圾回收 GC(Garbage collection)")]),t._v(" "),s("p",[t._v("下面代码执行完成以后, "),s("code",[t._v("aa")]),t._v(" 和 对象 "),s("code",[t._v("{x: 100}")]),t._v(" 还存在吗?")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aa'")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 垃圾回收")]),t._v("\n")])])]),s("p",[t._v("肯定不存在了,当 fn 执行完毕后,他内部定义的 对象和变量都会被释放这就是垃圾回收. 这是浏览器垃圾回收引擎来处理的,但是并不一定在 fn() 执行完毕后立即回收. 垃圾回收时机是由系统决定的.")]),t._v(" "),s("p",[t._v("在看一个例子")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 垃圾回收")]),t._v("\n")])])]),s("p",[t._v("当 fn 内部的 obj 被 window 引用的时候, fn 执行完毕 "),s("code",[t._v("{x: 100}")]),t._v(" 不会回收")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDataFns")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 闭包")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" set "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDataFns")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// data 被闭包捕获,所以他不会被释放.")]),t._v("\n   \n")])])]),s("h1",{attrs:{id:"垃圾回收的算法有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收的算法有哪些"}},[t._v("#")]),t._v(" 垃圾回收的算法有哪些")]),t._v(" "),s("ul",[s("li",[t._v("引用计数")]),t._v(" "),s("li",[t._v("标记清除")])]),t._v(" "),s("p",[t._v("从跟 window 定期的去遍历所有的属性, 不能被遍历到的属性会被当做垃圾回收")]),t._v(" "),s("p",[t._v("当我们怀疑页面发生了内存泄漏的时候可以使用 Performance 录制一段时间页面的内存变化. 如果录制后看到内存的下限不断的提升这个时候就需要注意来,有可能发生了内存的泄漏.")]),t._v(" "),s("p",[t._v("当怀疑发生了内存泄漏的时候就可以使用 memory 面板进一步定位泄漏的源头")]),t._v(" "),s("p",[t._v("从 memory 主界面开始先记录一下当前 堆内存 的快照.")]),t._v(" "),s("ol",[s("li",[t._v("打开 devTool 切换到 memory 面板")]),t._v(" "),s("li",[t._v("先记录一个堆内存的快照")]),t._v(" "),s("li",[t._v("在页面上执行可能发生泄漏的操作")]),t._v(" "),s("li",[t._v("再记录一个堆内存快照")]),t._v(" "),s("li",[t._v("重复执行步骤 3")]),t._v(" "),s("li",[t._v("最后记录一个堆内存快照")]),t._v(" "),s("li",[t._v("选择最后一个堆内存快照, 找到顶栏的 All objects 切换至 Object allocated between snapshots 1 and 2. (也可以对比 2 和 3)")]),t._v(" "),s("li",[t._v("切换后你就能看到两个快照直接新生成的对象. 你可以选择其中一项点开, 看看他的 retaining tree 里保留了哪些对象没有释放.")])]),t._v(" "),s("p",[t._v("Tips: 在记录第一个堆快照之前你可以先做一些预热操作,避免一些懒加载和缓存策略影响内存的分析.")]),t._v(" "),s("p",[t._v("内存快照里面出现的很多怪异的变量,这可能是因为环境的问题. 提前准备一个合理的 debug 环境也是很重要的.")]),t._v(" "),s("ul",[s("li",[t._v("尽量使用没有混淆的代码")]),t._v(" "),s("li",[t._v("排查问题使用 production 模式编译出来的代码\n"),s("ul",[s("li",[t._v("dev 模式往往开启了一些方便开发的特性,例如热更新.会影响到问题的排查")])])]),t._v(" "),s("li",[t._v("屏蔽浏览器插件,使用无痕模式")]),t._v(" "),s("li",[t._v("在现场打内存快照,便于跳转到源码所在行\n"),s("ul",[s("li",[t._v("尽管devTool记录下来的内存快照文件可以单独加载展示,但是还是建议在记录下内存快照的时候趁热分析,因为这时候还能从 retaining tree 上跳转到代码所在的行")])])])]),t._v(" "),s("h2",{attrs:{id:"快照里有一些-detached-dom-tree-是什么意思"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#快照里有一些-detached-dom-tree-是什么意思"}},[t._v("#")]),t._v(" 快照里有一些“Detached DOM tree”，是什么意思？")]),t._v(" "),s("p",[t._v("一个DOM节点只有在没有被页面的DOM树或者Javascript引用时，才会被垃圾回收。当一个节点处于“detached”状态，表示它已经不在DOM树上了，但Javascript仍旧对它有引用，所以暂时没有被回收。通常，Detached DOM tree往往会造成内存泄漏，我们可以重点分析这部分的数据。")]),t._v(" "),s("h2",{attrs:{id:"shallow-size-和-retained-size-它们有什么不同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shallow-size-和-retained-size-它们有什么不同"}},[t._v("#")]),t._v(" Shallow size 和 Retained size，它们有什么不同？")]),t._v(" "),s("ul",[s("li",[t._v("Shallow size: 这是对象自身占用内存的大小。通常只有数组和字符串的shallow size比较大。")]),t._v(" "),s("li",[t._v("Retain size: 这是将对象本身连同其无法从 GC 根到达的相关对象一起删除后释放的内存大小。")])]),t._v(" "),s("p",[t._v("因此，如果Shallow Size = Retained Size，说明基本没怎么泄漏。而如果Retained Size > Shallow Size，就需要多加注意了。")]),t._v(" "),s("h2",{attrs:{id:"memory里的summary视图-comparison视图-dominators视图和containment视图分别有什么不同呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#memory里的summary视图-comparison视图-dominators视图和containment视图分别有什么不同呢"}},[t._v("#")]),t._v(" Memory里的Summary视图, Comparison视图, Dominators视图和Containment视图分别有什么不同呢？")]),t._v(" "),s("h3",{attrs:{id:"summary-view"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#summary-view"}},[t._v("#")]),t._v(" Summary view:")]),t._v(" "),s("p",[t._v("顾名思义，Summary view 就是当前内存快照的一个概览。我们先介绍一下这个视图下的每一列是什么意思： - Constructor: 对象的构造器。 - Distance：与root的距离。距离越大，处理和加载这个对象的时间就越长。 - Object Count：指定构造器创建的对象的数量。 - Shallow Size：对象自身占用内存的大小。 - Retained Size：释放掉该对象后，能释放掉的内存。")]),t._v(" "),s("p",[t._v("在这个视图下你可以看到当前页面内存的具体构成，但如果想定位内存问题，下面的Comparison view会更加有用。")]),t._v(" "),s("h3",{attrs:{id:"comparison-view"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#comparison-view"}},[t._v("#")]),t._v(" Comparison view:")]),t._v(" "),s("p",[t._v("Comparison视图可以让你对比两份内存快照之间的差异。默认是跟上一份快照做对比，当然你也可以选择任意两份内存做对比。这个视图下每一列的数据有点不同： - Constructor: 对象的构造器。 - # New: 该对象构造器下有多少新对象被创建 - # Deleted: 该对象构造器下有多少新对象被销毁 - # Delta: # New - # Delete的差值 - Alloc.Size：两份快照之间新分配的内存 - Freed Size： 两份快照之间释放掉的内存 - Size Delta：Alloc Size - Freed Size 的差值")]),t._v(" "),s("p",[t._v("这个视图绝对是排查内存泄漏的利器。当你能定位到是哪些操作可能造成内存泄漏后，比较操作前后的内存快照，很容易就能发现发生内存泄漏的对象。")]),t._v(" "),s("h3",{attrs:{id:"containment-view"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#containment-view"}},[t._v("#")]),t._v(" Containment view:")]),t._v(" "),s("p",[t._v("Containment view提供了一个自下而上的视图，它允许你浏览和探索堆内存的内容。我们可以用它来分析一些全部变量的引用情况（如window）。")]),t._v(" "),s("h3",{attrs:{id:"statistics-view"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#statistics-view"}},[t._v("#")]),t._v(" Statistics view:")]),t._v(" "),s("p",[t._v("Statistics视图会用饼图的形式展示各个类型对象的内存占比")]),t._v(" "),s("p",[t._v("Constructor下的(array), Array, (closure), (compiled code)都对应的哪些内容？\n(closure): 函数闭包持有的内存引用。\n(array, string, number, regex): 包含着一系列对象，这些对象的属性上有对应类型变量的引用。\n(compiled code): Javascript引擎（如V8）为了加快运行速度，会对代码进行一次编译。(compiled code)顾名思义就是指与编译后的代码相关联的内存。\nDetached HTMLDivElement等：代码里对指定类型Dom节点的引用。\n发现有一个叫feedback_cell的字段经常出现，它是什么？是它导致了内存泄漏吗？")]),t._v(" "),s("p",[t._v("经常出现的feedback_cell\n放心，它不会造成内存泄漏。它是v8对频繁运行的热代码做出的优化，会被v8自己回收。详见这篇文章：Feedback vectors in heap snapshots – Rohit Pagariya")]),t._v(" "),s("h1",{attrs:{id:"常见的内存泄漏场景有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见的内存泄漏场景有哪些"}},[t._v("#")]),t._v(" 常见的内存泄漏场景有哪些？")]),t._v(" "),s("p",[t._v("这里列举了一些常见的内存泄漏场景，遇到内存泄漏问题时可以先自查一遍常见场景，个人感觉能解决日常开发中遇到的90%内存泄漏")]),t._v(" "),s("h2",{attrs:{id:"console导致的内存泄漏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#console导致的内存泄漏"}},[t._v("#")]),t._v(" console导致的内存泄漏")]),t._v(" "),s("p",[t._v("因为打印后的对象需要支持在控制台上查看，所以传递给console.log方法的对象是不能被垃圾回收的。我们需要避免在生产环境用console打印对象。")]),t._v(" "),s("h2",{attrs:{id:"框架配合第三方库使用时-没有及时执行销毁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#框架配合第三方库使用时-没有及时执行销毁"}},[t._v("#")]),t._v(" 框架配合第三方库使用时，没有及时执行销毁")]),t._v(" "),s("p",[t._v("这点可以参考vue cookbook里的例子："),s("a",{attrs:{href:"https://vuejs.bootcss.com/cookbook/avoiding-memory-leaks.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("避免内存泄漏 — Vue.js 中文文档"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"被遗忘的定时器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#被遗忘的定时器"}},[t._v("#")]),t._v(" 被遗忘的定时器")]),t._v(" "),s("p",[t._v("例如在组件初始化的时候设置了setInterval，那么在组件销毁之前记得调用clearInterval方法取消定时器。")]),t._v(" "),s("h2",{attrs:{id:"没有正确移除事件监听器-各种eventbus-dom事件监听等"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#没有正确移除事件监听器-各种eventbus-dom事件监听等"}},[t._v("#")]),t._v(" 没有正确移除事件监听器（各种EventBus, dom事件监听等）")]),t._v(" "),s("p",[t._v("这应该是最容易犯的一个错误，无论新手老手都有可能栽在这里。\n特征：performance里，监听器数量会持续上升")]),t._v(" "),s("p",[t._v("啰嗦一句：尽管大部分同学都会有主动移除监听器的观念，但如果姿势不对，可能依旧会造成内存泄漏。下面是一个真实案例：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 版本一")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mounted")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'resize'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("debounce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("handleWidthChange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeDestroy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'resize'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("debounce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("handleWidthChange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("乍一看好像写的还不错，有及时移除监听器，对resize这种频繁触发的事件也加了debounce处理。但其实这段代码就导致了内存泄漏：每次调用"),s("code",[t._v("debounce(this.handleWidthChange, 100)")]),t._v("时, 其实都会返回一个新的函数，导致"),s("code",[t._v("addEventListener")]),t._v(" 和 "),s("code",[t._v("removeEventListener")]),t._v("方法传入的回调函数已经不是同一个回调函数，监听器没有被正确移除，内存泄漏。")]),t._v(" "),s("p",[t._v("下面来看修改后的代码:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 版本二")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("debounceWidthChange")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mounted")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("debounceWidthChange "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("debounce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("handleWidthChange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'resize'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("debounceWidthChange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeDestroyed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'resize'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("debounceWidthChange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("修改后，监听和移除监听的已经是同一个回调函数了，看起来似乎已经没问题。然而，这段代码还是有内存泄漏的问题。没看出问题的小伙伴可以对比一下正确答案：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 版本三")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("debounceWidthChange")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mounted")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("debounceWidthChange "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("debounce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("handleWidthChange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'resize'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("debounceWidthChange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeDestroy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'resize'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("debounceWidthChange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("是的，答案非常狗血：Vue只有destroyed和beforeDestroy这两个生命周期，没有 beforeDestroyed，所以上面的beforeDestroyed函数永远不会执行，导致了内存泄漏…")]),t._v(" "),s("p",[t._v("结语\n简单总结一下排查内存泄漏的常见流程：")]),t._v(" "),s("ol",[s("li",[t._v("用performance面板记录操作一段时间内的内存变化，找出可能发生内存泄漏的操作。")]),t._v(" "),s("li",[t._v("用“three snapshot”技巧，记录下发生泄漏前后的内存快照")]),t._v(" "),s("li",[t._v("用comparison视图对泄漏前后的内存快照进行比较，找出泄漏的对象。")]),t._v(" "),s("li",[t._v("重点关注 Vue Component, Detached HTMLDivElement等Constructor 。")])]),t._v(" "),s("p",[t._v("https://developers.google.com/web/tools/chrome-devtools/memory-problems")]),t._v(" "),s("p",[t._v("https://addyosmani.com/blog/taming-the-unicorn-easing-javascript-memory-profiling-in-devtools/\nhttps://www.bitdegree.org/learn/chrome-memory-tab")])])}),[],!1,null,null,null);s.default=e.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{437:function(o,e,n){"use strict";n.r(e);var t=n(2),s=Object(t.a)({},(function(){var o=this,e=o._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":o.$parent.slotKey}},[e("h2",{attrs:{id:"commonjs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commonjs"}},[o._v("#")]),o._v(" CommonJS")]),o._v(" "),e("ul",[e("li",[e("p",[e("code",[o._v("require()")]),o._v(" 生成一个对象, 只会加载一次会被缓存. 这个对象是 module.exports 属性的一个拷贝. 模块内部的变化相互不反应, 可以实现条件加载")])]),o._v(" "),e("li",[e("p",[o._v("CommonJS 是一种模块规范,最初应用于 node.js 称为 nodejs 的模块规范. 浏览器端的 js 由于缺少模块规范, 在 ES6 之前实现了一套类似的模块规范(比如AMD)用来对前端模块进行管理. ES6 之后引入了一套新的 ES6 module 规范在语言标准的层面实现模块功能,有希望成为浏览器和服务器通用的模块解决方案. 由于浏览器的兼容性问题, 我们在 webpack 中使用的 export & import 会经过 babel 转换为 CommonJS 规范")])]),o._v(" "),e("li",[e("p",[o._v("CommonJS 模块输出的是一个值的拷贝, ES6 模块输出的是值的引入")])]),o._v(" "),e("li",[e("p",[o._v("CommonJS 模块是运行时加载, ES6 模块是编译时输出接口")])]),o._v(" "),e("li",[e("p",[o._v("CommonJS 是单个值导出, ES6 模块可以导出多个值")])]),o._v(" "),e("li",[e("p",[o._v("CommonJS 是动态语法可以写在判断里面, ES Module 是静态语法只能写在顶层")])]),o._v(" "),e("li",[e("p",[o._v("CommonJS 的 this 是当前模块, ES6 Module 的 this 是 undefined")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);